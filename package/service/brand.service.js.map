{"version":3,"sources":["service/brand.service.ts"],"names":[],"mappings":"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","file":"brand.service.js","sourcesContent":["import { Injectable, HttpException, Inject } from \"@nestjs/common\";\nimport { StoreComponent } from \"../interface/store.component\";\nimport { BrandLogo } from \"../model/brand.logo.entity\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Brand } from \"../model/brand.entity\";\nimport { Repository } from \"typeorm\";\nimport { Request } from \"express\";\n\n/* 品牌的服务组件 */\n@Injectable()\nexport class BrandService {\n\n    constructor(\n        @InjectRepository(Brand) private readonly brandRepository: Repository<Brand>,\n        @Inject(\"StoreComponentToken\") private readonly storeComponent: StoreComponent,\n        @InjectRepository(BrandLogo) private readonly brandLogoRepository: Repository<BrandLogo>\n    ) { }\n\n    /* 获取当前所有品牌 */\n    async getBrands(req: Request): Promise<Array<Brand>> {\n        const brands: Array<any> = await this.brandRepository.createQueryBuilder(\"brand\")\n                                            .select([\"brand.id\", \"brand.name\"])\n                                            .leftJoinAndSelect(\"brand.logo\", \"logo\")\n                                            .getMany();\n        for (let i = 0; i < brands.length; i++) {\n            brands[i].logo.url = await this.storeComponent.getUrl(req, brands[i].logo.bucketName, brands[i].logo.name, brands[i].logo.type, undefined);\n        }\n        return brands;\n    }\n\n    /* 创建指定名称品牌，名称已存在抛出异常 */\n    async createBrand(name: string, logo: { bucketName: string, rawName: string, base64: string }): Promise<void> {\n        const exist: Brand | undefined = await this.brandRepository.findOne({ name });\n        if (exist) {\n            throw new HttpException(\"指定name=\" + name + \"品牌已存在\", 404);\n        }\n        const { name: fileName, type } = await this.storeComponent.upload(logo.bucketName, logo.rawName, logo.base64, undefined);\n        try {\n            const brand: Brand = await this.brandRepository.save({ name } as Brand);\n            await this.brandLogoRepository.save({ bucketName: logo.bucketName, name: fileName, type, brand });\n        } catch (err) {\n            await this.storeComponent.delete(logo.bucketName, name, type);\n            throw new HttpException(\"发生了数据库错误\" + err.toString(), 403);\n        }\n    }\n\n    /* 更新指定id品牌，品牌不存在或者新名称已存在，抛出异常 */\n    async updateBrand(id: number, name: string, logo: { bucketName: string, rawName: string, base64: string }): Promise<void> {\n        const brand: Brand | undefined = await this.brandRepository.findOne(id, { relations: [\"logo\"] });\n        if (!brand) {\n            throw new HttpException(\"指定id=\" + id + \"品牌不存在\", 404);\n        }\n        if (name && (name !== brand.name)) {\n            const exist: Brand | undefined = await this.brandRepository.findOne({ name });\n            if (exist) {\n                throw new HttpException(\"指定name=\" + name + \"品牌已存在\", 404);\n            }\n            brand.name = name;\n        }\n        try {\n            if (logo) {\n                const { name, type } = await this.storeComponent.upload(logo.bucketName, logo.rawName, logo.base64, undefined);\n                await this.storeComponent.delete(brand.logo.bucketName, brand.logo.name, brand.logo.type);\n                await this.brandLogoRepository.remove(brand.logo);\n                await this.brandLogoRepository.save({bucketName: logo.bucketName, name, type, brand});\n            }\n            await this.brandRepository.save(brand);\n        } catch (err) {\n            throw new HttpException(\"发生了数据库错误\" + err.toString(), 403);\n        }\n    }\n\n    /* 删除指定id品牌，品牌不存在或者品牌下存在商品，抛出异常 */\n    async deleteBrand(id: number): Promise<void> {\n        const brand: Brand | undefined = await this.brandRepository.findOne(id, { relations: [\"goodses\", \"logo\"] });\n        if (!brand) {\n            throw new HttpException(\"指定id=\" + id + \"品牌不存在\", 404);\n        }\n        if (brand.goodses && brand.goodses.length > 0) {\n            throw new HttpException(\"指定品牌下存在商品不允许删除\", 404);\n        }\n        try {\n            await this.storeComponent.delete(brand.logo.bucketName, brand.logo.name, brand.logo.type);\n            await this.brandRepository.remove(brand);\n        } catch (err) {\n            throw new HttpException(\"发生了数据库错误\" + err.toString(), 403);\n        }\n    }\n\n}\n"]}