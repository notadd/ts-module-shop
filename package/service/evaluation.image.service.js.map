{"version":3,"sources":["service/evaluation.image.service.ts"],"names":[],"mappings":"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","file":"evaluation.image.service.js","sourcesContent":["import { OutEvaluationImage } from \"../interface/evaluationimage/evaluation.images.data\";\nimport { EvaluationImage } from \"../model/evaluation.image.entity\";\nimport { Injectable, HttpException, Inject } from \"@nestjs/common\";\nimport { StoreComponent } from \"../interface/store.component\";\nimport { Evaluation } from \"../model/evaluation.entity\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport { Repository } from \"typeorm\";\nimport { Request } from \"express\";\n\n/* 评价图片的服务组件 */\n@Injectable()\nexport class EvaluationImageService {\n\n    constructor(\n        @Inject(\"StoreComponentToken\") private readonly storeComponent: StoreComponent,\n        @InjectRepository(Evaluation) private readonly evaluationRepository: Repository<Evaluation>,\n        @InjectRepository(EvaluationImage) private readonly evaluationImageRepository: Repository<EvaluationImage>\n    ) { }\n\n    async getEvaluationImages(req: Request, evaluationId: number): Promise<Array<OutEvaluationImage>> {\n        const evaluation: Evaluation | undefined = await this.evaluationRepository.findOne(evaluationId, { relations: [\"images\"] });\n        if (!evaluation) {\n            throw new HttpException(\"指定id=\" + evaluationId + \"评价不存在\", 404);\n        }\n        const images: Array<any> | undefined = evaluation.images;\n        for (let i = 0; i < images.length; i++) {\n            images[i].url = await this.storeComponent.getUrl(req, images[i].bucketName, images[i].name, images[i].type, undefined);\n        }\n        console.log(images);\n        return images;\n    }\n\n    async createEvaluationImage(evaluationId: number, bucketName: string, rawName: string, base64: string): Promise<void> {\n        const evaluation: Evaluation | undefined = await this.evaluationRepository.findOne(evaluationId, { relations: [\"images\"] });\n        if (!evaluation) {\n            throw new HttpException(\"指定id=\" + evaluationId + \"评价不存在0\", 404);\n        }\n        const { name, type } = await this.storeComponent.upload(bucketName, rawName, base64, undefined);\n        try {\n            evaluation.images.push(this.evaluationImageRepository.create({ bucketName, name, type }));\n            await this.evaluationRepository.save(evaluation);\n        } catch (err) {\n            throw new HttpException(\"发生了数据库错误\" + err.toString(), 403);\n        }\n    }\n\n    async deleteEvaluationImage(id: number): Promise<void> {\n        const evaluationImage: EvaluationImage | undefined = await this.evaluationImageRepository.findOne(id);\n        if (!evaluationImage) {\n            throw new HttpException(\"指定id=\" + id + \"评价图片不存在\", 404);\n        }\n        await this.storeComponent.delete(evaluationImage.bucketName, evaluationImage.name, evaluationImage.type);\n        try {\n            await this.evaluationImageRepository.remove(evaluationImage);\n        } catch (err) {\n            throw new HttpException(\"发生了数据库错误\" + err.toString(), 403);\n        }\n    }\n\n}\n"]}