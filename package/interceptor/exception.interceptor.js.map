{"version":3,"sources":["interceptor/exception.interceptor.ts"],"names":[],"mappings":";;;;;;;;AAAA,2CAA8F;AAE9F,mCAAiC;AAGjC,IAAa,oBAAoB,GAAjC;IAEI,SAAS,CAAC,OAAyB,EAAE,OAAwB;QAEzD,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,MAAM,EAAO,EAAE;YACtC,IAAI,GAAG,YAAY,sBAAa,EAAE;gBAC9B,OAAO,OAAO,CAAC,OAAO,CAAC;oBACnB,IAAI,EAAE,GAAG,CAAC,SAAS,EAAE;oBACrB,OAAO,EAAE,GAAG,CAAC,WAAW,EAAE;iBAC7B,CAAC,CAAC;aACN;iBAAM,IAAI,GAAG,YAAY,KAAK,EAAE;gBAC7B,OAAO,OAAO,CAAC,OAAO,CAAC;oBACnB,IAAI,EAAE,GAAG;oBACT,OAAO,EAAE,UAAU,GAAG,GAAG,CAAC,IAAI,GAAG,IAAI,GAAG,GAAG,CAAC,OAAO,GAAG,IAAI,GAAG,GAAG,CAAC,KAAK;iBACzE,CAAC,CAAC;aACN;iBAAM;gBACH,OAAO,OAAO,CAAC,OAAO,CAAC;oBACnB,IAAI,EAAE,GAAG;oBACT,OAAO,EAAE,UAAU,GAAG,GAAG,CAAC,QAAQ,EAAE;iBACvC,CAAC,CAAC;aACN;QACL,CAAC,CAAC,CAAC;IACP,CAAC;CACJ,CAAA;AAvBY,oBAAoB;IADhC,mBAAU,EAAE;GACA,oBAAoB,CAuBhC;AAvBY,oDAAoB","file":"exception.interceptor.js","sourcesContent":["import { Injectable, NestInterceptor, ExecutionContext, HttpException } from \"@nestjs/common\";\nimport { Observable } from \"rxjs\";\nimport \"rxjs/add/operator/catch\";\n\n@Injectable()\nexport class ExceptionInterceptor implements NestInterceptor {\n\n    intercept(context: ExecutionContext, stream$: Observable<any>): Observable<any> {\n\n        return stream$.catch((err, caught): any => {\n            if (err instanceof HttpException) {\n                return Promise.resolve({\n                    code: err.getStatus(),\n                    message: err.getResponse()\n                });\n            } else if (err instanceof Error) {\n                return Promise.resolve({\n                    code: 500,\n                    message: \"出现了意外错误:\" + err.name + \"\\n\" + err.message + \"\\n\" + err.stack\n                });\n            } else {\n                return Promise.resolve({\n                    code: 500,\n                    message: \"出现了意外错误:\" + err.toString()\n                });\n            }\n        });\n    }\n}\n"]}