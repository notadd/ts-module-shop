{"version":3,"sources":["resolver/sku.resolver.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,gFAA4E;AAC5E,2CAAwE;AACxE,6CAA4D;AAE5D,wDAAoD;AAOpD,IAAa,WAAW,GAAxB;IAEI,YACyC,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAC3D,CAAC;IAGC,IAAI,CAAC,GAAY,EAAE,IAAyB;;YAC9C,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,OAAO,EAAE;gBACV,MAAM,IAAI,sBAAa,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;aACxC;YACD,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YACpD,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC;QACvD,CAAC;KAAA;IAGK,SAAS,CAAC,GAAY,EAAE,IAAyF;;YACnH,MAAM,EAAE,OAAO,EAAE,EAAE,EAAE,SAAS,EAAE,gBAAgB,EAAE,GAAG,IAAI,CAAC;YAC1D,IAAI,CAAC,OAAO,IAAI,CAAC,EAAE,IAAI,CAAC,SAAS,IAAI,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;gBACrF,MAAM,IAAI,sBAAa,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;aACxC;YACD,MAAM,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE,EAAE,SAAS,EAAE,gBAAgB,CAAC,CAAC;YAC1E,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC;QAC7C,CAAC;KAAA;IAGK,SAAS,CAAC,GAAY,EAAE,IAAoF;;YAC9G,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE,gBAAgB,EAAE,GAAG,IAAI,CAAC;YACrD,IAAI,CAAC,EAAE,EAAE;gBACL,MAAM,IAAI,sBAAa,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;aACxC;YACD,MAAM,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE,gBAAgB,CAAC,CAAC;YACrE,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC;QAC7C,CAAC;KAAA;IAGK,SAAS,CAAC,GAAY,EAAE,IAAoB;;YAC9C,MAAM,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,EAAE,EAAE;gBACL,MAAM,IAAI,sBAAa,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;aACxC;YACD,MAAM,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;YACpC,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC;QAC7C,CAAC;KAAA;CACJ,CAAA;AAtCG;IADC,eAAK,CAAC,MAAM,CAAC;;;;uCAQb;AAGD;IADC,kBAAQ,CAAC,WAAW,CAAC;;;;4CAQrB;AAGD;IADC,kBAAQ,CAAC,WAAW,CAAC;;;;4CAQrB;AAGD;IADC,kBAAQ,CAAC,WAAW,CAAC;;;;4CAQrB;AA5CQ,WAAW;IAFvB,kBAAQ,CAAC,KAAK,CAAC;IACf,wBAAe,CAAC,4CAAoB,CAAC;IAI7B,WAAA,eAAM,CAAC,wBAAU,CAAC,CAAA;qCAA8B,wBAAU;GAHtD,WAAW,CA6CvB;AA7CY,kCAAW","file":"sku.resolver.js","sourcesContent":["import { ExceptionInterceptor } from \"../interceptor/exception.interceptor\";\nimport { Inject, HttpException, UseInterceptors } from \"@nestjs/common\";\nimport { Resolver, Query, Mutation } from \"@nestjs/graphql\";\nimport { SkusData } from \"../interface/sku/skus.data\";\nimport { SkuService } from \"../service/sku.service\";\nimport { Data } from \"../interface/data\";\nimport { Request } from \"express\";\n\n/* Sku的Resolver */\n@Resolver(\"Sku\")\n@UseInterceptors(ExceptionInterceptor)\nexport class SkuResolver {\n\n    constructor(\n        @Inject(SkuService) private readonly skuService: SkuService\n    ) { }\n\n    @Query(\"skus\")\n    async skus(req: Request, body: { goodsId: number }): Promise<SkusData> {\n        const { goodsId } = body;\n        if (!goodsId) {\n            throw new HttpException(\"缺少参数\", 404);\n        }\n        const skus = await this.skuService.getSkus(goodsId);\n        return { code: 200, message: \"获取指定商品Sku成功\", skus };\n    }\n\n    @Mutation(\"createSku\")\n    async createSku(req: Request, body: { goodsId: number, no: string, inventory: number, propertyValueIds: Array<number> }): Promise<Data> {\n        const { goodsId, no, inventory, propertyValueIds } = body;\n        if (!goodsId || !no || !inventory || !propertyValueIds || propertyValueIds.length === 0) {\n            throw new HttpException(\"缺少参数\", 404);\n        }\n        await this.skuService.createSku(goodsId, no, inventory, propertyValueIds);\n        return { code: 200, message: \"创建Sku成功\" };\n    }\n\n    @Mutation(\"updateSku\")\n    async updateSku(req: Request, body: { id: number, no: string, inventory: number, propertyValueIds: Array<number> }): Promise<Data> {\n        const { id, no, inventory, propertyValueIds } = body;\n        if (!id) {\n            throw new HttpException(\"缺少参数\", 404);\n        }\n        await this.skuService.updateSku(id, no, inventory, propertyValueIds);\n        return { code: 200, message: \"更新Sku成功\" };\n    }\n\n    @Mutation(\"deleteSku\")\n    async deleteSku(req: Request, body: { id: number }): Promise<Data> {\n        const { id } = body;\n        if (!id) {\n            throw new HttpException(\"缺少参数\", 404);\n        }\n        await this.skuService.deleteSku(id);\n        return { code: 200, message: \"删除Sku成功\" };\n    }\n}\n"]}