{"version":3,"sources":["resolver/pay.setting.resolver.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,gFAA4E;AAE5E,2CAAwE;AACxE,wEAAmE;AACnE,6CAA4D;AAO5D,IAAa,kBAAkB,GAA/B;IAEI,YACgD,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;IAChF,CAAC;IAGC,UAAU;;YACZ,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;YAChE,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC;QAC1D,CAAC;KAAA;IAGK,cAAc,CAAC,GAAY,EAAE,IAA6C;;YAC5E,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC;YACnC,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,IAAI,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;gBAC1F,MAAM,IAAI,sBAAa,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;aACxC;YACD,IAAI,MAAM,KAAK,IAAI,IAAI,MAAM,KAAK,KAAK,EAAE;gBACrC,MAAM,IAAI,sBAAa,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;aACxC;YACD,IAAI,SAAS,KAAK,IAAI,IAAI,SAAS,KAAK,KAAK,EAAE;gBAC3C,MAAM,IAAI,sBAAa,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;aACxC;YACD,MAAM,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;YAC/D,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;QAC9C,CAAC;KAAA;IAGK,eAAe,CAAC,GAAY;;YAC9B,MAAM,IAAI,CAAC,iBAAiB,CAAC,eAAe,EAAE,CAAC;YAC/C,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;QAC9C,CAAC;KAAA;CACJ,CAAA;AA1BG;IADC,eAAK,CAAC,YAAY,CAAC;;;;oDAInB;AAGD;IADC,kBAAQ,CAAC,gBAAgB,CAAC;;;;wDAc1B;AAGD;IADC,kBAAQ,CAAC,iBAAiB,CAAC;;;;yDAI3B;AAhCQ,kBAAkB;IAF9B,kBAAQ,CAAC,YAAY,CAAC;IACtB,wBAAe,CAAC,4CAAoB,CAAC;IAI7B,WAAA,eAAM,CAAC,uCAAiB,CAAC,CAAA;qCAAqC,uCAAiB;GAH3E,kBAAkB,CAiC9B;AAjCY,gDAAkB","file":"pay.setting.resolver.js","sourcesContent":["import { ExceptionInterceptor } from \"../interceptor/exception.interceptor\";\nimport { PaySettingData } from \"../interface/paysetting/pay.setting.data\";\nimport { Inject, HttpException, UseInterceptors } from \"@nestjs/common\";\nimport { PaySettingService } from \"../service/pay.setting.service\";\nimport { Resolver, Mutation, Query } from \"@nestjs/graphql\";\nimport { Data } from \"../interface/data\";\nimport { Request } from \"express\";\n\n/* 支付方式Resolver */\n@Resolver(\"PaySetting\")\n@UseInterceptors(ExceptionInterceptor)\nexport class PaySettingResolver {\n\n    constructor(\n        @Inject(PaySettingService) private readonly paySettingService: PaySettingService\n    ) { }\n\n    @Query(\"paySetting\")\n    async paySetting(): Promise<PaySettingData> {\n        const paySetting = await this.paySettingService.getPaySetting();\n        return { code: 200, message: \"获取支付设置成功\", paySetting };\n    }\n\n    @Mutation(\"savePaySetting\")\n    async savePaySetting(req: Request, body: { aliPay: boolean, weixinPay: boolean }): Promise<Data> {\n        const { aliPay, weixinPay } = body;\n        if (aliPay === undefined || aliPay === null || weixinPay === undefined || weixinPay === null) {\n            throw new HttpException(\"缺少参数\", 404);\n        }\n        if (aliPay !== true && aliPay !== false) {\n            throw new HttpException(\"参数错误\", 400);\n        }\n        if (weixinPay !== true && weixinPay !== false) {\n            throw new HttpException(\"参数错误\", 400);\n        }\n        await this.paySettingService.savePaySetting(aliPay, weixinPay);\n        return { code: 200, message: \"保存支付设置成功\" };\n    }\n\n    @Mutation(\"clearPaySetting\")\n    async clearPaySetting(req: Request): Promise<Data> {\n        await this.paySettingService.clearPaySetting();\n        return { code: 200, message: \"清除支付配置成功\" };\n    }\n}\n"]}