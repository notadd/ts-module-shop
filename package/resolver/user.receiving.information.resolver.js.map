{"version":3,"sources":["resolver/user.receiving.information.resolver.ts"],"names":[],"mappings":"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","file":"user.receiving.information.resolver.js","sourcesContent":["import { UserReceivingInformationsData } from \"../interface/userreceivinginformation/user.receiving.informations.data\";\nimport { UserReceivingInformationData } from \"../interface/userreceivinginformation/user.receiving.information.data\";\nimport { UserReceivingInformationService } from \"../service/user.receiving.information.service\";\nimport { ExceptionInterceptor } from \"../interceptor/exception.interceptor\";\nimport { Inject, HttpException, UseInterceptors } from \"@nestjs/common\";\nimport { Resolver, Query, Mutation } from \"@nestjs/graphql\";\nimport { Data } from \"../interface/data\";\nimport { Request } from \"express\";\n\n/* 用户收货信息的Resolver */\n@Resolver(\"UserReceivingInformation\")\n@UseInterceptors(ExceptionInterceptor)\nexport class UserReceivingInformationResolver {\n\n    constructor(\n        @Inject(UserReceivingInformationService) private readonly userReceivingInformationService: UserReceivingInformationService\n    ) { }\n\n    @Query(\"userReceivingInformation\")\n    async userReceivingInformation(req: Request, body: { id: number }): Promise<UserReceivingInformationData> {\n        const { id } = body;\n        if (!id) {\n            throw new HttpException(\"缺少参数\", 404);\n        }\n        const information = await this.userReceivingInformationService.getUserReceivingInformation(id);\n        return { code: 200, message: \"获取指定用户收货信息成功\", information };\n    }\n\n    @Query(\"userReceivingInformations\")\n    async userReceivingInformations(req: Request, body: { userId: number }): Promise<UserReceivingInformationsData> {\n        const { userId } = body;\n        if (!userId) {\n            throw new HttpException(\"缺少参数\", 404);\n        }\n        const informations = await this.userReceivingInformationService.getUserReceivingInformations(userId);\n        return { code: 200, message: \"获取指定用户收货信息成功\", informations };\n    }\n\n    @Mutation(\"createUserReceivingInformation\")\n    async createUserReceivingInformation(req: Request, body: {\n        userId: number,\n        consignee: string,\n        email: string,\n        region: string,\n        address: string,\n        postCode: string,\n        homePhone: string,\n        mobilePhone: string\n    }): Promise<Data> {\n        const { userId, consignee, email, region, address, postCode, homePhone, mobilePhone } = body;\n        if (!userId || !consignee || !email || !region || !address || !postCode || !homePhone || !mobilePhone) {\n            throw new HttpException(\"缺少参数\", 404);\n        }\n        await this.userReceivingInformationService.createUserReceivingInformation(userId, consignee, email, region, address, postCode, homePhone, mobilePhone);\n        return { code: 200, message: \"创建用户收货信息成功\" };\n    }\n\n    @Mutation(\"updateUserReceivingInformation\")\n    async updateUserReceivingInformation(req: Request, body: {\n        id: number,\n        consignee: string,\n        email: string,\n        region: string,\n        address: string,\n        postCode: string,\n        homePhone: string,\n        mobilePhone: string\n    }): Promise<Data> {\n        const { id, consignee, email, region, address, postCode, homePhone, mobilePhone } = body;\n        if (!id || !consignee || !email || !region || !address || !postCode || !homePhone || !mobilePhone) {\n            throw new HttpException(\"缺少参数\", 404);\n        }\n        await this.userReceivingInformationService.updateUserReceivingInformation(id, consignee, email, region, address, postCode, homePhone, mobilePhone);\n        return { code: 200, message: \"更新用户收货信息成功\" };\n    }\n\n    @Mutation(\"deleteUserReceivingInformation\")\n    async deleteUserReceivingInformation(req: Request, body: { id: number }): Promise<Data> {\n        const { id } = body;\n        if (!id) {\n            throw new HttpException(\"缺少参数\", 404);\n        }\n        await this.userReceivingInformationService.deleteUserReceivingInformation(id);\n        return { code: 200, message: \"删除用户收货信息成功\" };\n    }\n\n}\n"]}