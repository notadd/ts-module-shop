{"version":3,"sources":["resolver/goods.image.resolver.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,gFAA4E;AAE5E,2CAAwE;AACxE,wEAAmE;AACnE,6CAA4D;AAO5D,IAAa,kBAAkB,GAA/B;IAEI,YACgD,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;IAChF,CAAC;IAGC,WAAW,CAAC,GAAY,EAAE,IAAyB;;YACrD,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,OAAO,EAAE;gBACV,MAAM,IAAI,sBAAa,CAAC,OAAO,GAAG,OAAO,GAAG,OAAO,EAAE,GAAG,CAAC,CAAC;aAC7D;YACD,MAAM,MAAM,GAAuF,MAAM,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;YAC7J,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,eAAe,EAAE,MAAM,EAAE,CAAC;QAC3D,CAAC;KAAA;IAGK,gBAAgB,CAAC,GAAY,EAAE,IAA8E;;YAC/G,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;YACtD,IAAI,CAAC,OAAO,IAAI,CAAC,UAAU,IAAI,CAAC,OAAO,IAAI,CAAC,MAAM,EAAE;gBAChD,MAAM,IAAI,sBAAa,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;aACxC;YACD,MAAM,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;YACpF,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;QAC9C,CAAC;KAAA;IAGK,gBAAgB,CAAC,GAAY,EAAE,IAAqC;;YACtE,MAAM,EAAE,OAAO,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC;YAC7B,IAAI,CAAC,OAAO,IAAI,CAAC,EAAE,EAAE;gBACjB,MAAM,IAAI,sBAAa,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;aACxC;YACD,MAAM,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;YAC3D,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;QAC9C,CAAC;KAAA;CAEJ,CAAA;AA7BG;IADC,eAAK,CAAC,aAAa,CAAC;;;;qDAQpB;AAGD;IADC,kBAAQ,CAAC,kBAAkB,CAAC;;;;0DAQ5B;AAGD;IADC,kBAAQ,CAAC,kBAAkB,CAAC;;;;0DAQ5B;AAlCQ,kBAAkB;IAF9B,kBAAQ,CAAC,YAAY,CAAC;IACtB,wBAAe,CAAC,4CAAoB,CAAC;IAI7B,WAAA,eAAM,CAAC,uCAAiB,CAAC,CAAA;qCAAqC,uCAAiB;GAH3E,kBAAkB,CAoC9B;AApCY,gDAAkB","file":"goods.image.resolver.js","sourcesContent":["import { ExceptionInterceptor } from \"../interceptor/exception.interceptor\";\nimport { GoodsImageData } from \"../interface/goodsimage/goods.image.data\";\nimport { Inject, HttpException, UseInterceptors } from \"@nestjs/common\";\nimport { GoodsImageService } from \"../service/goods.image.service\";\nimport { Resolver, Query, Mutation } from \"@nestjs/graphql\";\nimport { Data } from \"../interface/data\";\nimport { Request } from \"express\";\n\n/* 商品图片的Resolver */\n@Resolver(\"GoodsImage\")\n@UseInterceptors(ExceptionInterceptor)\nexport class GoodsImageResolver {\n\n    constructor(\n        @Inject(GoodsImageService) private readonly goodsImageService: GoodsImageService\n    ) { }\n\n    @Query(\"goodsImages\")\n    async goodsImages(req: Request, body: { goodsId: number }): Promise<GoodsImageData> {\n        const { goodsId } = body;\n        if (!goodsId) {\n            throw new HttpException(\"指定id=\" + goodsId + \"商品不存在\", 404);\n        }\n        const images: Array<{ id: number; bucketName: string; name: string, type: string; url: string }> = await this.goodsImageService.getGoodsImages(req, goodsId);\n        return { code: 200, message: \"获取指定商品的所有图片成功\", images };\n    }\n\n    @Mutation(\"createGoodsImage\")\n    async createGoodsImage(req: Request, body: { goodsId: number, bucketName: string, rawName: string, base64: string }): Promise<Data> {\n        const { goodsId, bucketName, rawName, base64 } = body;\n        if (!goodsId || !bucketName || !rawName || !base64) {\n            throw new HttpException(\"缺少参数\", 404);\n        }\n        await this.goodsImageService.createGoodsImage(goodsId, bucketName, rawName, base64);\n        return { code: 200, message: \"创建商品图片成功\" };\n    }\n\n    @Mutation(\"deleteGoodsImage\")\n    async deleteGoodsImage(req: Request, body: { goodsId: number, id: number }): Promise<Data> {\n        const { goodsId, id } = body;\n        if (!goodsId || !id) {\n            throw new HttpException(\"缺少参数\", 404);\n        }\n        await this.goodsImageService.deleteGoodsImage(goodsId, id);\n        return { code: 200, message: \"删除商品图片成功\" };\n    }\n\n}\n"]}