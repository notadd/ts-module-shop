{"version":3,"sources":["resolver/evaluation.resolver.ts"],"names":[],"mappings":"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","file":"evaluation.resolver.js","sourcesContent":["import { InputEvaluationImage } from \"../interface/evaluation/input.evaluation.image\";\nimport { ExceptionInterceptor } from \"../interceptor/exception.interceptor\";\nimport { Inject, HttpException, UseInterceptors } from \"@nestjs/common\";\nimport { EvaluationService } from \"../service/evaluation.service\";\nimport { Resolver, Query, Mutation } from \"@nestjs/graphql\";\nimport { Data } from \"../interface/data\";\nimport { Request } from \"express\";\n\n/* 评价Resolver */\n@Resolver(\"Evaluation\")\n@UseInterceptors(ExceptionInterceptor)\nexport class EvaluationResolver {\n\n    constructor(\n        @Inject(EvaluationService) private readonly evaluationService: EvaluationService\n    ) { }\n\n    @Query(\"evaluation\")\n    async evaluation(req: Request, body: { id: number }): Promise<any> {\n        const { id } = body;\n        if (!id) {\n            throw new HttpException(\"缺少参数\", 400);\n        }\n        const evaluation = await this.evaluationService.getEvaluation(id);\n        return { code: 200, message: \"获取指定评价信息成功\", evaluation };\n    }\n\n    /* 获取指定商品的所有评价 */\n    @Query(\"evaluations\")\n    async evaluations(req: Request, body: { goodsId: number }): Promise<any> {\n        const { goodsId } = body;\n        if (!goodsId) {\n            throw new HttpException(\"缺少参数\", 404);\n        }\n        const evaluations = await this.evaluationService.getEvaluations(goodsId);\n        return { code: 200, message: \"获取指定商品评价成功\", evaluations };\n    }\n\n    @Mutation(\"createEvaluation\")\n    async createEvaluation(req: Request, body: { content: string, userId: number, orderItemId: number, inputImages: Array<InputEvaluationImage> }): Promise<Data> {\n        const { content, userId, orderItemId, inputImages } = body;\n        if (!content || !userId || !orderItemId) {\n            throw new HttpException(\"缺少参数\", 400);\n        }\n        await this.evaluationService.createEvaluation(content, userId, orderItemId, inputImages);\n        return { code: 200, message: \"创建评价成功\" };\n    }\n\n    @Mutation(\"updateEvaluation\")\n    async updateEvaluation(req: Request, body: { id: number, content: string, display: boolean }): Promise<Data> {\n        const { id, content, display } = body;\n        if (!id || !content || display === undefined || display === null) {\n            throw new HttpException(\"缺少参数\", 404);\n        }\n        if (display !== true && display !== false) {\n            throw new HttpException(\"参数错误\", 404);\n        }\n        await this.evaluationService.updateEvaluation(id, content, display);\n        return { code: 200, message: \"更新评价成功\" };\n    }\n\n    @Mutation(\"deleteEvaluation\")\n    async deleteEvaluation(req: Request, body: { id: number }): Promise<Data> {\n        const { id } = body;\n        if (!id) {\n            throw new HttpException(\"缺少参数\", 400);\n        }\n        await this.evaluationService.deleteEvaluation(id);\n        return { code: 200, message: \"删除评价成功\" };\n    }\n\n}\n"]}