{"version":3,"sources":["resolver/floor.resolver.ts"],"names":[],"mappings":"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","file":"floor.resolver.js","sourcesContent":["import { ExceptionInterceptor } from \"../interceptor/exception.interceptor\";\nimport { Inject, HttpException, UseInterceptors } from \"@nestjs/common\";\nimport { FloorsData } from \"../interface/floor/floors.data\";\nimport { Resolver, Query, Mutation } from \"@nestjs/graphql\";\nimport { FloorData } from \"../interface/floor/floor.data\";\nimport { FloorService } from \"../service/floor.service\";\nimport { Data } from \"../interface/data\";\nimport { Request } from \"express\";\n\n/* 楼层设置的Resolver */\n@Resolver(\"Floor\")\n@UseInterceptors(ExceptionInterceptor)\nexport class FloorResolver {\n\n    constructor(@Inject(FloorService) private readonly floorService: FloorService) { }\n\n    @Query(\"floors\")\n    async floors(req: Request): Promise<FloorsData> {\n        const floors = await this.floorService.getFloors();\n        return {code: 200, message: \"获取所有楼层成功\", floors};\n    }\n\n    @Query(\"floor\")\n    async floor(req: Request, body: { id: number }): Promise<FloorData> {\n        const { id } = body;\n        if (!id) {\n            throw new HttpException(\"缺少参数\", 404);\n        }\n        const floor = await this.floorService.getFloor(id);\n        return { code: 200, message: \"获取指定楼层成功\", floor };\n    }\n\n    @Mutation(\"createFloor\")\n    async createFloor(req: Request, body: { name: string, display: boolean, goodsIds: Array<number> }): Promise<Data> {\n        const { name, display, goodsIds } = body;\n        if (!name || display === undefined || display === null || !goodsIds || goodsIds.length === 0) {\n            throw new HttpException(\"缺少参数\", 404);\n        }\n        if (display !== true && display !== false) {\n            throw new HttpException(\"参数错误\", 400);\n        }\n        await this.floorService.createFloor(name, display, goodsIds);\n        return { code: 200, message: \"创建楼层成功\" };\n    }\n\n    @Mutation(\"updateFloor\")\n    async updateFloor(req: Request, body: { id: number, name: string, display: boolean, goodsIds: Array<number> }): Promise<Data> {\n        const { id, name, display, goodsIds } = body;\n        if (!id || !name || display === undefined || display === null || !goodsIds || goodsIds.length === 0) {\n            throw new HttpException(\"缺少参数\", 404);\n        }\n        if (display !== true && display !== false) {\n            throw new HttpException(\"参数错误\", 400);\n        }\n        await this.floorService.updateFloor(id, name, display, goodsIds);\n        return { code: 200, message: \"更新楼层成功\" };\n    }\n\n    @Mutation(\"deleteFloor\")\n    async deleteFloor(req: Request, body: { id: number }): Promise<Data> {\n        const { id } = body;\n        if (!id) {\n            throw new HttpException(\"缺少参数\", 404);\n        }\n        await this.floorService.deleteFloor(id);\n        return { code: 200, message: \"删除楼层成功\" };\n    }\n\n}\n"]}