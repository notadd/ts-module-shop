{"version":3,"sources":["model/goods.property.entity.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,qCAAkI;AAClI,mEAAwD;AACxD,2DAAgD;AAQhD,IAAa,aAAa,GAA1B;CAwDC,CAAA;AArDG;IADC,gCAAsB,EAAE;;yCACd;AAKX;IAHC,gBAAM,CAAC;QACJ,MAAM,EAAE,EAAE;KACb,CAAC;;2CACW;AAUb;IAHC,gBAAM,CAAC;QACJ,MAAM,EAAE,EAAE;KACb,CAAC;;2CACW;AAUb;IAHC,gBAAM,CAAC;QACJ,MAAM,EAAE,EAAE;KACb,CAAC;;gDACgB;AAOlB;IAJC,gBAAM,CAAC;QACJ,IAAI,EAAE,cAAc;QACpB,QAAQ,EAAE,IAAI;KACjB,CAAC;8BACI,KAAK;2CAAS;AAGpB;IADC,gBAAM,EAAE;;kDACW;AAUpB;IAPC,mBAAS,CAAC,IAAI,CAAC,EAAE,CAAC,6BAAS,EAAE,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,UAAU,EAAE;QAC7D,OAAO,EAAE,KAAK;QACd,QAAQ,EAAE,SAAS;QACnB,QAAQ,EAAE,KAAK;QACf,IAAI,EAAE,KAAK;QACX,KAAK,EAAE,KAAK;KACf,CAAC;8BACS,6BAAS;gDAAC;AAOrB;IALC,mBAAS,CAAC,IAAI,CAAC,EAAE,CAAC,qCAAa,EAAE,aAAa,CAAC,EAAE,CAAC,aAAa,CAAC,QAAQ,EAAE;QACvE,OAAO,EAAE,KAAK;QACd,IAAI,EAAE,KAAK;QACX,KAAK,EAAE,KAAK;KACf,CAAC;8BACM,KAAK;6CAAgB;AAvDpB,aAAa;IAFzB,gBAAM,CAAC,gBAAgB,CAAC;IACxB,eAAK,CAAC,cAAc,EAAE,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;GAClC,aAAa,CAwDzB;AAxDY,sCAAa","file":"goods.property.entity.js","sourcesContent":["import { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn, OneToMany, ManyToOne, Index } from \"typeorm\";\nimport { PropertyValue } from \"./property.value.entity\";\nimport { GoodsType } from \"./goods.type.entity\";\n\n/* 商品属性实体，属于商品类型，其下包含了多个属性值\n   主要按照类型区分为unique、radio、check三种类型，其中unique为属于商品的属性，与价格无关\n   radio、check为属于单品的属性，与指定增量价格有关，商品最终价格由基本价格与所选属性价格的总和决定\n*/\n@Entity(\"goods_property\")\n@Index(\"name_type_id\", [\"name\", \"goodsTypeId\"])\nexport class GoodsProperty {\n\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column({\n        length: 20\n    })\n    name: string;\n\n    /* 属性类型，即属性是属于商品还是单品，属性与单品的关系\n       unique：唯一属性，即属于商品的属性，对于所有单品来说是一样的\n       radio：单选属性，只可以选择一个属性值，属性值对应的价格会被加到总价中\n       check：复选属性，可以选择多个属性值，多个值对应的价格都会被加到总价中\n    */\n    @Column({\n        length: 20\n    })\n    type: string;\n\n    /* 属性录入方式，即属性输入的方式\n       text：普通文本\n       list：列表中选择\n       textarea：多行文本框\n    */\n    @Column({\n        length: 20\n    })\n    inputType: string;\n\n    /* 当属性录入方式为list时，所有列表值 */\n    @Column({\n        type: \"simple-array\",\n        nullable: true\n    })\n    list: Array<string>;\n\n    @Column()\n    goodsTypeId: number;\n\n    /* 商品类型删除时，其下属性级联删除，注意此时要保证商品类型下没有商品 */\n    @ManyToOne(type => GoodsType, goodsType => goodsType.properties, {\n        cascade: false,\n        onDelete: \"CASCADE\",\n        nullable: false,\n        lazy: false,\n        eager: false\n    })\n    goodsType: GoodsType;\n\n    @OneToMany(type => PropertyValue, propertyValue => propertyValue.property, {\n        cascade: false,\n        lazy: false,\n        eager: false\n    })\n    values: Array<PropertyValue>;\n}\n"]}